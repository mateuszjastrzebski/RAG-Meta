name: Notion Bridge

on:
  issue_comment:
    types: [created]     # reaguje, gdy Codex (lub ktoś z zespołu) doda komentarz
  workflow_dispatch:
    inputs:
      title:
        description: 'Tytuł zadania'
        required: true
      due:
        description: 'Termin (YYYY-MM-DD)'
        required: false

permissions:
  contents: read
  issues: read
  pull-requests: read

jobs:
  create-task:
    runs-on: ubuntu-latest

    if: >
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'issue_comment' &&
        startsWith(github.event.comment.body, '/notion task') &&
        (
          github.event.comment.author_association == 'MEMBER' ||
          github.event.comment.author_association == 'COLLABORATOR' ||
          github.event.comment.author_association == 'OWNER'
        )
      )

    steps:
      - name: Parsuj parametry
        id: parse
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TITLE="${{ github.event.inputs.title }}"
            DUE="${{ github.event.inputs.due }}"
          else
            BODY="${{ github.event.comment.body }}"
            # Wzór komentarza:
            # /notion task "Tytuł zadania" due=YYYY-MM-DD
            TITLE=$(echo "$BODY" | sed -n 's#^/notion task "\([^"]\+\)".*#\1#p')
            DUE=$(echo "$BODY" | sed -n 's#.* due=\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\).*#\1#p')
          fi

          if [ -z "$TITLE" ]; then
            echo "Brak tytułu (użyj: /notion task \"Tytuł\" due=YYYY-MM-DD)" >&2
            exit 1
          fi

          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "due=$DUE" >> $GITHUB_OUTPUT

      - name: Utwórz zadanie w Notion
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          TITLE: ${{ steps.parse.outputs.title }}
          DUE: ${{ steps.parse.outputs.due }}
        shell: bash
        run: |
          set -euo pipefail

          create_payload() {
            if [ -n "${DUE:-}" ]; then
              jq -n --arg db "$NOTION_DATABASE_ID" --arg title "$TITLE" --arg due "$DUE" '{
                parent: { database_id: $db },
                properties: {
                  Name: { title: [ { text: { content: $title } } ] },
                  Due:  { date: { start: $due } }
                }
              }'
            else
              jq -n --arg db "$NOTION_DATABASE_ID" --arg title "$TITLE" '{
                parent: { database_id: $db },
                properties: {
                  Name: { title: [ { text: { content: $title } } ] }
                }
              }'
            fi
          }

          DATA=$(create_payload)

          curl -sS https://api.notion.com/v1/pages \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Notion-Version: 2022-06-28" \
            -H "Content-Type: application/json" \
            --data "$DATA" \
            | jq -r '.id as $id | "Created Notion page: \($id)"'
